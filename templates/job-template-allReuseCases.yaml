parameters:
  osVersion: ''
  osImage: ''

jobs:
- job: createAllNew_SN_${{parameters.osVersion}}
  timeoutInMinutes: 180
  variables:
    scenario: v2-allNew-SN
    testcase: $(scenario)-${{parameters.osVersion}}-$(Build.BuildId)
  steps:
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: var-rg-name
      value: $(testcase)
  - template: terraform-deployment-steps.yaml
    parameters:
      testCaseName: $(testcase)
      osImage: ${{parameters.osImage}}
- job: createAllNew_HA_${{parameters.osVersion}}
  timeoutInMinutes: 180
  variables:
    scenario: v2-allNew-HA
    testcase: $(scenario)-${{parameters.osVersion}}-$(Build.BuildId)
  steps:
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: var-rg-name
      value: $(testcase)
  - template: terraform-deployment-steps.yaml
    parameters:
      testCaseName: $(testcase)
      osImage: ${{parameters.osImage}}
  - template: ansible-deployment-steps.yaml
    parameters:
      testCaseName: $(testcase)
- job: reuseRG_SN_${{parameters.osVersion}}
  timeoutInMinutes: 180
  variables:
    scenario: v2-reuseRG-SN
    testcase: $(scenario)-${{parameters.osVersion}}-$(Build.BuildId)
  steps:
  - script: |
      az login --service-principal --user $(hana-pipeline-spn-id) --password  $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
      az group create --location eastus -n $(testcase)
      echo '##vso[task.setvariable variable=arm_id]$(az group show --name $(testcase) --query id --output tsv)'
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: var-rg-name
      value: $(testcase)
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: rg-arm-id
      value: $(arm_id)
  - template: terraform-deployment-steps.yaml
    parameters:
      testCaseName: $(testcase)
      osImage: ${{parameters.osImage}}
  - template: ansible-deployment-steps.yaml
    parameters:
      testCaseName: $(testcase)
- job: reuseVnet_SN_${{parameters.osVersion}}
  dependsOn: createAllNew_SN_${{parameters.osVersion}}
  timeoutInMinutes: 180
  variables:
    scenario: v2-reuseVNET-SN
    testcase: $(scenario)-${{parameters.osVersion}}-$(Build.BuildId)
  steps:
  - script: |
      az login --service-principal --user $(hana-pipeline-spn-id) --password  $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
      echo '##vso[task.setvariable variable=arm_id]$(az network vnet show --resource-group v2-allNew-SN-${{parameters.osVersion}}-$(Build.BuildId) --name vnet-mgmt --query id --output tsv)'
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: var-rg-name
      value: $(testcase)
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: vnet-arm-id
      value: $(arm_id)
  - template: terraform-deployment-steps.yaml
    parameters:
      testCaseName: $(testcase)
      osImage: ${{parameters.osImage}}
- job: reuseNSG_SN_${{parameters.osVersion}}
  timeoutInMinutes: 180
  dependsOn: createAllNew_SN_${{parameters.osVersion}}
  variables:
    scenario: v2-reuseNSG-SN
    testcase: $(scenario)-${{parameters.osVersion}}-$(Build.BuildId)
  steps:
  - script: |
      az login --service-principal --user $(hana-pipeline-spn-id) --password  $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
      echo '##vso[task.setvariable variable=arm_id]$(az network nsg show --resource-group v2-allNew-SN-${{parameters.osVersion}}-$(Build.BuildId) --name nsg-mgmt --query id --output tsv)' 
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: var-rg-name
      value: $(testcase)
  - template: test-case-template-update.yaml
    parameters:
      scenario: $(scenario)
      testCaseName: $(testcase)
      placeHolder: nsg-arm-id
      value: $(arm_id)
  - template: terraform-deployment-steps.yaml
    parameters:
      testCaseName: $(testcase)
      osImage: ${{parameters.osImage}}
